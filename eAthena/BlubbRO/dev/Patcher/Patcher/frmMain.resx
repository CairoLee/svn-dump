<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAEAAQAAAAACAAAAAAECAAAAAAEAAAACAAAAAQACAAAAAQAEAAEAAAAAAAEF
        AQAAAAEAAAACAAAAAAEAAAAAAAAAAQACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////
        //////////////////////////////////////////////////////////////////////////////8A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBgQABAMGBAMGBAQBBgUEBQMFAwMFBQUFBQUAAgIFBQUEBAQE
        BAQDBQUEBAQEBAQDBQUFBAYEBQMEBQMGBAMEAwUEBAQFBgIBAwMCBAQGBAQAAAAAAAAAAAAAAAAAAQCA
        gICAgICAgICAgICAgIAyM2Y1M2cyMmgwNGQzNZs0MmbNyv8zNDI3MjQzMzNNTkzPyv/9/////v6xs7RM
        S01dX180MjFnmsw0M5tmZ5oEAwUAAAAAAAAAAAEAAAAAAQCAgICAgICAgICAgICAgIAgIiIyM2UyM2Y0
        NGQ0MmYyM2ZpmswwMjM0NDQxMzPLzP8yNTMzNDJgX2FdX2C0srJlZpg1MjRmmMw1NGZmZZcGAwUAAAAA
        AQEAAQD///8CAACAgICAgICAgICAgICAgICAgIAjISEiISMzNGYyMmg0M2VnZphnZ8uYmcuYmcxoZ85l
        ZMtnZJtVVlQ0MmYxNDKysbMyMjJlms0vMmU3NJsDBAL///8CAAAAAAD///8CAACAgICAgICAgICAgICA
        gICAgICAgICAgIAkIiJkZ5pnZ8uXzP6Zy/+czP+XzP+Zy/+WmcyZmsxoZcxmZ5k0MmZVVlRlms01M2c2
        NJgvNJcGBAT///8AAAECAAD///8AAQCAgICAgICAgICAgICAgICAgICAgICAgIBXVVSYmcvF1vCamMya
        zP+ZzfyXzP+dzP+azf+YmcyZms1oZcxmZ5pmZ5pXVVUhISE1NGYyMmgCBAT///8AAQAAAAH///8AAQCA
        gICAgICAgICAgICAgICAgICAgIBUVVOXms2ZzP5nZ8vJ1+7E1e/H1vDI1u2XzP6czf+azP+YmcucmMxm
        ZcxnZ8tkZspoZM1VVFZVVlQGAwX///8AAQACAAD///8CAAGAgIAyNJqAgICAgICAgICAgICAgIBnZpjG
        1e/F1vD7///N///O///G1e9kmv/////9//7M/P+Wzf+amMwyNJiYmM5nZs2XmMpnZs1WVFQABQT///8A
        AAEAAQD///8AAQCAgIA0M5uAgICAgICAgICAgICAgIBnZZnF1+7L/v/P///L//3E1u2bzv82M5ozZs7/
        /v/////N/v80NZczMpmamMxomv5oZppiZ8pnZs0GBAT///8AAAEAAAH///8BAQGAgIA2MpuAgICAgICA
        gICAgICAgIBoZ5nG1PD////G1u3J1vCYzf+Zy/8jJCIxMpr///7J//81MZo1NWUxM5dnZs7N//9kZspp
        Zs2YzP8EBQP///8AAQAAAQD///8CAAGAgIAyNJqAgICAgICAgIA0MmaAgICAgIA0Zpv//v+Zy/+Zy/+Z
        zfybmswmISIyM2UwNJozMpk1M2cyM2Y0M5tkZspnZ5fO//8zM5c0M5sEAwX///8AAAAAAAH///8DAQGA
        gIAzMZsyM2WAgICAgIA2MmaAgICAgICAgID9//yZzv+czP8yM2YwNWYkICU3M2c0NGQyM2Y2MmYyNJho
        ZcxnZs5lZpjK/v5nZs02M5oCBAX///8AAQADAQH///8AAACAgIA2M5oyM2aAgICAgIAxM5kyMmiAgICA
        gIA1NGaWy/7H2O2XzP40M2UzNGcwM2YyM2ZnZs0yM5tlmMpnZs0zNGZnZZlkmP80M5szMpkEBQP///8C
        AAACAAD///8AAACAgIA2M5ovM5mAgICAgIAwNpc3NGY0MWiAgIA2M2WazP/D1/DO/v/L/v/N//w0M2Ux
        NGc0MmYzMmRomv4wMmhmZcxmZ5loZsozMpkyM2UCBAT///8BAQEAAAH///8AAACAgIA2NJhlaMo1NGaA
        gIApKSlkZsw0MmaAgIBmZc2by//O/v///////v/9//7////P//8zMpllmf7O//9kZsxnZZllZ5cyM2Yw
        M5szMpkEBQP///8AAAAAAQD///8AAAGAgIAyNJpmZtBlZMszNWU0M2UnKigzMpo0MmZnZs3J1vDE1e/L
        //3N//3N//3K//+azP8yNJr//v/M/vw0M5toZpowM2Y2MmY0M5s2MmYEBAT///8AAAAAAAD///8DAQGA
        gICAgIA0MJlqm/9kZswzMpoqKiomKChpZpeXm8zE1e/H1fHE1e/M//7G1u2ZzP6bmM8xM5fL//1mmv80
        M5plZpk3M2c0MmY0M5oxM5kDBwL///8AAAACAAH///8AAACAgICAgIA1M2dlmf5km/5oZ84wMpgrKCpk
        Z8mamMyZmc+by/+czf+amMxmZsqbmc0yNJhpZc5kmP80M5s1M5cyNJozMpoyM2UzM5c0M5oEBAT///8A
        AAAAAQD///8AAQGAgICAgIA1Mmlmmv/L/v/N//1lZ80wM5szMpkzMpkyM5ubm8uYmcwzMpo0M5owMphp
        Zs1mZso0M5o0M5syNJo0M5oyNGQyM2U2Mpk0M5sABAP///8AAQAAAAD///8CAAGAgICAgICAgICAgIDL
        ///L///O//xmmv5mmf82M5oxMpoyNJoyNJgyM5tnmP5lZ8tmZspomP9kZsw2MplpZs1pZc4wM5s2NJhk
        ZsxiZc4GBAT///8DAQAAAAD///8AAQBmZspnZs5jZs42NJgzMppnZs3L/v9nmv80MZhnZs00M5poZcw1
        MpkzM5eXz/9mZcwxM5mZy/9mZsplZs5nZ8tpZ8tnZs4zMpkwNZhmZcwEBQP///8AAAEAAAD///8AAABo
        mP/J///N//9mZcwyM5s0NJgrKSgxM5llZ81kZswxM5dlmf4yNJo2M5qZzP5nZc80M5qZy/9nm/9mZcwp
        KCoxMpqXzP9lZ8s0M5s1M5cEAwX///8BAQEAAQD///8CAACAgICAgICAgIA0M5qAgICAgIAwM5tpZs2Z
        y/9nZs5mZsqdzP9kZsoxM5nL//+cmf8nKSljZs6Zy/9nZ8s0M5osKStmZcyYzf9nZs4wNGUEBAT///8A
        AAADAQH///8AAAOAgICAgICAgICAgICAgIArKCozM5eYzf+azf8vMpuZzv/M/v5nZs0nKSnN/v+cmf8p
        KihmZczN//9kmv8xMponKigyNJpmZc2Zy/8xMpoGBAT///8DAAICAAH///8AAACAgICAgICAgICAgIAA
        AAAoKipkZszM//9naMosKimZy//M//9mZsopKSnL//+VzP8oKiozMpqazP/K/f9pZs0rKSk0M2VnZs2Z
        zfyVzP8GBAT///8AAAAAAAAAAAACAACAgICAgICAgICAgIApKSkzM5eZzP7N//81MZoqKCfM//+cy/8q
        KSUpKiiZy/+azP8rKiYpKSloZM3M//9mZcwxM5knKSk1MWVoaMyby/8CBAQAAAAAAAAAAAAAAAAAAACA
        gICAgICAgICAgIAoKioxM5nO/v+Zy/8pKCwyNJjL//+VzP8pKSk0Mpxjmf6azf8oJyksKiloZsqVzf5n
        mP5lmf4sKiopKCw1M2cxM5kEBAQAAAAAAAAAAAAAAAAFBQUABQQGBAQDAwMDBgQGAwUGAwUCBQMGBAMD
        BQYFAgQCBQMHBQQFAwIEBQMHBQQEBAQABAUEBAQABQQGAwUEBQMGAwUDBAIEBAQEBQMCBQMFBQUAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/////////////////////////////////////////////////////////
        //////////////////////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAAAAAAAAC
        AAECAAECAAAAAQAAAAADAQECAAEAAAAAAAAAAAEAAAAAAgAAAAEEAAAAAQAAAQAAAAEAAAAAAAACAAAA
        AAAAAAAAAAAAAAAAAADwAAAP8AAAD8AAAAPAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwAAAA8AAAAPwAAAP8AAADw==
</value>
  </data>
</root>